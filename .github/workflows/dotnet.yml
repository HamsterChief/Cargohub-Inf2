# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET and Python Tests
on:
  push:
    branches: 
      - "C#-Cargohub"
  pull_request:
    branches: 
      - "C#-Cargohub"

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    # C# Integration Tests
    # # Run .NET tests
    # - name: Test
    #   run: dotnet test --no-build --verbosity normal
    
    # PYTEST
    # - name: Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.12'
    
    # - name: Install pytest
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install pytest
    
    # - name: Run pytest tests
    # # -v for more detailed output
    #   run: pytest ./Integrationtests/endpoints_tests.py -v

    #SSH Connection to Server
    - name: Connect to SSH Server and Run Commands
      run: |
        # Kill all previous dotnet programs
        pkill -f 'dotnet run' || true

        cd 

        cd Cargohub-Inf2/MyEFCoreProject/


        # Discard all local changes
        git reset --hard HEAD

        git pull origin C#-Cargohub
        # nohup keeps the dotnet running
        nohup dotnet run --urls "http://0.0.0.0:5072" > output.log 2>&1 &
        disown
        # Shows all running dotnet programs
        ps aux | grep 'dotnet run'
        tail -f output.log
