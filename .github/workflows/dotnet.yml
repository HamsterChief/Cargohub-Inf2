# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET and Python Tests

on:
  push:
    branches: 
      - "C#-Cargohub"
  pull_request:
    branches: 
      - "C#-Cargohub"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    # C# Integration Tests
    # # Run .NET tests
    # - name: Test
    #   run: dotnet test --no-build --verbosity normal
    
    # PYTEST
    # - name: Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.12'
    
    # - name: Install pytest
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install pytest
    
    # - name: Run pytest tests
    # # -v for more detailed output (easier debugging)
    #   run: pytest ./Integrationtests/endpoints_tests.py -v

    # SSH Connection to Server
    # - name: Connect to SSH Server and Run Commands
    #   uses: appleboy/ssh-action@v0.1.6
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: ${{ secrets.SSH_USER }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     port: 22  
    #     script: |
    #       pkill -f 'dotnet run' || true

    #       cd Cargohub-Inf2/MyEFCoreProject/

    #       git pull origin C#-Cargohub

    #       nohup dotnet run --urls "http://0.0.0.0:5072" > output.log 2>&1 &

    #       ps aux | grep 'dotnet run'
